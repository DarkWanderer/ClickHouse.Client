name: Coverage

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**/*.md'
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    name: Run
    runs-on: ubuntu-latest
    permissions:
      statuses: write

    services:
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - uses: actions/cache@v3
      name: Cache NuGet
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x

    - name: Install coverlet-collector
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package coverlet.collector --no-restore

    - name: Install coverlet-msbuild
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package coverlet.msbuild --no-restore

    - name: Install GitHubActionsTestLogger
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package GitHubActionsTestLogger --no-restore

    - name: Test with coverage
      run: dotnet test --framework net6.0 --configuration Release --verbosity normal --logger GitHubActions /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:SkipAutoProps=true
      env:
        CLICKHOUSE_CONNECTION: Host=localhost;Port=8123

    - run: mv ./ClickHouse.Client.Tests/coverage.net6.0.cobertura.xml ./ClickHouse.Client/coverage.cobertura.xml

    - name: Upload coverage xml
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: ./ClickHouse.Client/coverage.cobertura.xml

    - name: Install pycobertura
      run: pip install pycobertura

    - name: Print summary
      working-directory: ${{ github.workspace }}/ClickHouse.Client
      run: pycobertura show coverage.cobertura.xml --format markdown >> $GITHUB_STEP_SUMMARY

    - name: Set status checks
      working-directory: ${{ github.workspace }}/ClickHouse.Client
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: python ${{ github.workspace }}/.github/coverage-status.py
                  --coverage-file coverage.cobertura.xml
                  --repository ${{ github.repository }} --sha ${{ github.event.pull_request.head.sha || github.sha }}

  compare:
    name: Compare
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      statuses: write
    needs:
      - coverage

    steps:
    - name: Install pycobertura
      run: pip install pycobertura

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout main
      uses: actions/checkout@v4
      with:
        ref: main
        path: main

    - name: Download coverage
      uses: actions/download-artifact@v3
      with:
        name: coverage
        path: ${{ github.workspace }}/ClickHouse.Client

    - name: Download 'main' coverage
      uses: benday-inc/download-latest-artifact@main
      with:
        token: ${{ github.token }}
        repository_owner: ${{ github.repository_owner }}
        repository_name: ClickHouse.Client
        workflow_name: ${{ github.workflow }}
        branch_name: main
        artifact_name: coverage
        download_path: ${{ github.workspace }}/main/ClickHouse.Client
        download_filename: coverage.zip
      
    - name: Unzip 'main' coverage
      working-directory: ${{ github.workspace }}/main/ClickHouse.Client
      run: unzip coverage.zip

    - name: Report diff annotations
      run: pycobertura diff ./main/ClickHouse.Client/coverage.cobertura.xml ./ClickHouse.Client/coverage.cobertura.xml
                --format github-annotation
      continue-on-error: true
      
    - name: Report diff summary
      run: pycobertura diff ./main/ClickHouse.Client/coverage.cobertura.xml ./ClickHouse.Client/coverage.cobertura.xml
                --format markdown >> $GITHUB_STEP_SUMMARY
      continue-on-error: true

    - name: Generate diff json
      if: ${{ github.event_name == 'pull_request' }}
      run: pycobertura diff ./main/ClickHouse.Client/coverage.cobertura.xml ./ClickHouse.Client/coverage.cobertura.xml --format json --output coverage.diff.json
      continue-on-error: true

    - name: Set status checks
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: python ${{ github.workspace }}/.github/coverage-status.py
                  --coverage-file coverage.diff.json
                  --repository ${{ github.repository }} --sha ${{ github.event.pull_request.head.sha || github.sha }}
