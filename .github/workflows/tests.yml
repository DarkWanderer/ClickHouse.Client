name: Tests

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '**/*.md'
  pull_request:
    branches: [ master ]

jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    services:
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      name: Cache NuGet
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Checkout master
      uses: actions/checkout@v3
      if: ${{ github.event_name == 'pull_request' }}
      with:
        ref: master
        path: master

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x

    - name: Install pycobertura
      run: pip install pycobertura

    - name: Install coverlet-collector
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package coverlet.collector

    - name: Install coverlet-msbuild
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package coverlet.msbuild

    - name: Install GitHubActionsTestLogger
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package GitHubActionsTestLogger
      
    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --framework netstandard2.1 --configuration Release --no-restore ClickHouse.Client/ClickHouse.Client.csproj

    - name: Test with coverage
      run: dotnet test --framework net6.0 --configuration Release --no-restore --verbosity normal --logger GitHubActions /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:SkipAutoProps=true
      env:
        CLICKHOUSE_CONNECTION: Host=localhost;Port=8123

    - name: Upload coverage xml
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: ./ClickHouse.Client.Tests/coverage.cobertura.xml

    - name: Download 'master' coverage
      if: ${{ github.event_name == 'pull_request' }}
      uses: benday-inc/download-latest-artifact@main
      with:
        token: ${{ github.token }}
        repository_owner: ${{ github.repository_owner	}}
        repository_name: ClickHouse.Client
        workflow_name: ${{ github.workflow }}
        branch_name: master
        artifact_name: coverage
        download_path: ${{ github.workspace }}/master/ClickHouse.Client
        download_filename: coverage.zip
      
    - name: Unzip 'master' coverage
      if: ${{ github.event_name == 'pull_request' }}
      working-directory: ${{ github.workspace }}/master/ClickHouse.Client
      run: unzip coverage.zip

    - run: mv ./ClickHouse.Client.Tests/coverage.cobertura.xml ./ClickHouse.Client/

    - name: Report diff coverage
      if: ${{ github.event_name == 'pull_request' }}
      continue-on-error: true
      run: pycobertura diff ./master/ClickHouse.Client/coverage.cobertura.xml ./ClickHouse.Client/coverage.cobertura.xml --format markdown -o code-coverage-diff.md

    - name: Post diff Summary
      if: ${{ github.event_name == 'pull_request' }}
      run: cat code-coverage-diff.md >> $GITHUB_STEP_SUMMARY

    - name: Report full coverage
      run: pycobertura show ./ClickHouse.Client/coverage.cobertura.xml --format markdown -o code-coverage-full.md

    - name: Post full summary
      run: cat code-coverage-full.md >> $GITHUB_STEP_SUMMARY

    - name: Stick PR comment
      uses: marocchino/sticky-pull-request-comment@v2
      continue-on-error: true
      if: ${{ github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' }}
      with:
        recreate: true
        path: code-coverage-diff.md

  windows:
    name: Windows Build
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      name: Cache NuGet
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Build
      run: dotnet build

  regress:
    name: Regression
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag:
        - 'yandex/clickhouse-server:20.3'
        - 'yandex/clickhouse-server:20.6'
        - 'yandex/clickhouse-server:20.9'
        - 'yandex/clickhouse-server:20.12'
        - 'clickhouse/clickhouse-server:21.3'
        - 'clickhouse/clickhouse-server:21.7'
        - 'clickhouse/clickhouse-server:21.9'
        - 'clickhouse/clickhouse-server:21.12'
        - 'clickhouse/clickhouse-server:22.3'
        - 'clickhouse/clickhouse-server:22.6'
        - 'clickhouse/clickhouse-server:22.9'
        - 'clickhouse/clickhouse-server:22.12'
    services:
      clickhouse:
        image: ${{ matrix.tag }}
        ports:
          - 8123:8123
    steps:
    - uses: actions/checkout@v3
      name: Checkout
    
    - uses: actions/cache@v3
      name: Cache NuGet
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x

    - name: Install GitHubActionsTestLogger
      run: dotnet add ClickHouse.Client.Tests/ClickHouse.Client.Tests.csproj package GitHubActionsTestLogger

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --framework netstandard2.1 --configuration Release --no-restore ClickHouse.Client/ClickHouse.Client.csproj /clp:ErrorsOnly

    - name: Test
      run: dotnet test --framework net6.0 --configuration Release --no-restore --verbosity normal --logger GitHubActions
      env:
        CLICKHOUSE_CONNECTION: Host=localhost;Port=8123
        CLICKHOUSE_CONTAINER_VERSION: ${{ matrix.tag }}
